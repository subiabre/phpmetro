#!/usr/bin/env php
<?php declare(strict_types=1);

use PHPMetro\Component\Console;
use PHPMetro\Component\MissingConfigException;

/**
 * This file is the binary used to run tests by the PHPMetro statistical analysis package
 * @package PHPMetro
 * @author https://gitlab.com/subiabre
 * @license MIT
 * @see https://gitlab.com/subiabre/phpmetro
 */

// Find autoload and config
$autoloads = [
    __DIR__ . '/../../autoload.php', 
    __DIR__ . '/../vendor/autoload.php', 
    __DIR__ . '/vendor/autoload.php',
];

foreach ($autoloads as $file) {
    if (file_exists($file)) {
        define('PHPMETRO_COMPOSER_INSTALL', $file);

        break;
    }
}

unset($file);

if (!defined('PHPMETRO_COMPOSER_INSTALL')) {
    fwrite(
        STDERR,
        'You need to set up the project dependencies using Composer:' . PHP_EOL . PHP_EOL .
        '    composer install' . PHP_EOL . PHP_EOL .
        'You can learn all about Composer on https://getcomposer.org/.' . PHP_EOL
    );

    die(1);
}

// Require autoload
require PHPMETRO_COMPOSER_INSTALL;

// Run PHPMetro
$phpmetro = new PHPMetro\Service\Runner();

try {
    $phpmetro->run();
} catch (Exception $error) {
    $console = new Console();

    $console->write($error->getMessage() . PHP_EOL);
} catch (MissingConfigException $e) {
    $console = new Console();
    $config = file(dirname(PHPMETRO_COMPOSER_INSTALL) . '/subiabre/phpmetro/phpmetro.xml');

    file_put_contents(dirname(PHPMETRO_COMPOSER_INSTALL, 1) . '/phpmetro.xml', $config);

    $console->write("Copied template phpmetro.xml config file to root folder." . PHP_EOL);
    $console->write("Please review and edit this file.");
}
